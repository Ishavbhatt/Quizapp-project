{"ast":null,"code":"var _jsxFileName = \"/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showmarks.js\";\nimport React from \"react\";\n\nclass Showmarks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalmarks: \"\"\n    };\n  }\n\n  componenpidMount() {\n    console.log(totalmarks);\n    fetch(\"http://localhost:3000/api/v1/user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.quizuserToken\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.success) {\n        this.setState({\n          totalmarks: data.user.marksId.reverse()\n        });\n      }\n\n      console.log(this.state.totalmarks);\n    });\n  }\n\n  render() {\n    let totalmarks = this.state.totalmarks;\n    console.log(totalmarks);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"showmarks-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, totalmarks.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"All MArks\"), totalmarks.map((marks, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, index + 1)))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"No marks\")));\n  }\n\n}\n\nexport default Showmarks;","map":{"version":3,"sources":["/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showmarks.js"],"names":["React","Showmarks","Component","constructor","state","totalmarks","componenpidMount","console","log","fetch","method","headers","Authorization","localStorage","quizuserToken","then","res","json","data","success","setState","user","marksId","reverse","render","length","map","marks","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AACDC,EAAAA,gBAAgB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAI,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,MAAAA,MAAM,EAAE,KADiC;AAEzCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAEC,YAAY,CAACC;AAFrB;AAFgC,KAAtC,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;;AACA,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,aAAKC,QAAL,CAAc;AAAEf,UAAAA,UAAU,EAAEa,IAAI,CAACG,IAAL,CAAUC,OAAV,CAAkBC,OAAlB;AAAd,SAAd;AACD;;AACDhB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,UAAvB;AACD,KAdH;AAeD;;AACDmB,EAAAA,MAAM,GAAG;AAAA,QACDnB,UADC,GACc,KAAKD,KADnB,CACDC,UADC;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,WACE,0CACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,UAAU,CAACoB,MAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGpB,UAAU,CAACqB,GAAX,CAAe,CAACC,KAAD,EAAQC,KAAR,KACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,GAAG,CAAb,CADF,CADD,CAFH,CADD,GAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,CADF,CADF;AAoBD;;AAhDqC;;AAkDxC,eAAe3B,SAAf","sourcesContent":["import React from \"react\";\n\nclass Showmarks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalmarks: \"\"\n    };\n  }\n  componenpidMount() {\n    console.log(totalmarks);\n    fetch(\"http://localhost:3000/api/v1/user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.quizuserToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.success) {\n          this.setState({ totalmarks: data.user.marksId.reverse() });\n        }\n        console.log(this.state.totalmarks);\n      });\n  }\n  render() {\n    let { totalmarks } = this.state;\n    console.log(totalmarks);\n    return (\n      <>\n        <div className=\"showmarks-section\">\n          {totalmarks.length ? (\n            <div>\n              <p>All MArks</p>\n              {totalmarks.map((marks, index) => (\n                <div>\n                  <h1>{index + 1}</h1>\n                  {/* <h1>{marks.quizset}</h1>\n       <h1>{index + 1}</h1> */}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p>No marks</p>\n          )}\n        </div>\n      </>\n    );\n  }\n}\nexport default Showmarks;\n"]},"metadata":{},"sourceType":"module"}