{"ast":null,"code":"var _jsxFileName = \"/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showquiz.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Showquiz.css\";\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n\n    this.handleQuizzes = () => {\n      this.setState({\n        quizname: this.props.match.params.quizname\n      });\n      fetch(\"http://localhost:3000/api/v1/quizzes\").then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.success) {\n          data.questions.map(question => question.quizset == this.state.quizname ? this.setState({\n            filterqns: this.state.filterqns.concat(question)\n          }) : \"\");\n        }\n\n        console.log(this.state.filterqns);\n      });\n    };\n\n    this.handleAns = (_id, ans) => {\n      this.setState({\n        show: true\n      });\n      let _this$state = this.state,\n          marks = _this$state.marks,\n          filterqns = _this$state.filterqns;\n      filterqns.map(question => {\n        if (question._id === _id) {\n          return question.correctanswer === ans ? this.setState({\n            marks: marks + 1\n          }) : \"\";\n        }\n      });\n    };\n\n    this.state = {\n      show: false,\n      quizname: \"\",\n      filterqns: [],\n      marks: 0\n    };\n  }\n\n  componentDidMount() {\n    this.handleQuizzes();\n  }\n\n  render() {\n    let filterqns = this.state.filterqns;\n    return React.createElement(\"div\", {\n      className: \"quizlist-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, filterqns.length ? filterqns.map((question, index) => React.createElement(\"div\", {\n      className: \"quiz-card-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"question-no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, index + 1, \".\")), React.createElement(\"div\", {\n      className: \"question-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"question-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, question.title), React.createElement(\"div\", {\n      className: \"question-answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, question.answers.map(option => React.createElement(\"button\", {\n      onClick: () => {\n        this.handleAns(question._id, option);\n      },\n      className: \"question-answers-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, option)))))) : React.createElement(\"p\", {\n      className: \"quizlist-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"no question found\"));\n  }\n\n}\n\nexport default withRouter(Showquiz);","map":{"version":3,"sources":["/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showquiz.js"],"names":["React","withRouter","Showquiz","Component","constructor","handleQuizzes","setState","quizname","props","match","params","fetch","then","res","json","data","console","log","success","questions","map","question","quizset","state","filterqns","concat","handleAns","_id","ans","show","marks","correctanswer","componentDidMount","render","length","index","title","answers","option"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport \"../styles/Showquiz.css\";\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      quizname: \"\",\n      filterqns: [],\n      marks: 0\n    };\n  }\n  handleQuizzes = () => {\n    this.setState({ quizname: this.props.match.params.quizname });\n    fetch(\"http://localhost:3000/api/v1/quizzes\")\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.success) {\n          data.questions.map(question =>\n            question.quizset == this.state.quizname\n              ? this.setState({\n                  filterqns: this.state.filterqns.concat(question)\n                })\n              : \"\"\n          );\n        }\n        console.log(this.state.filterqns);\n      });\n  };\n\n  componentDidMount() {\n    this.handleQuizzes();\n  }\n\n  handleAns = (_id, ans) => {\n    this.setState({ show: true });\n    let { marks, filterqns } = this.state;\n    filterqns.map(question => {\n      if (question._id === _id) {\n        return question.correctanswer === ans\n          ? this.setState({ marks: marks + 1 })\n          : \"\";\n      }\n    });\n  };\n\n  render() {\n    let { filterqns } = this.state;\n    return (\n      <div className=\"quizlist-section\">\n        {filterqns.length ? (\n          filterqns.map((question, index) => (\n            <div className=\"quiz-card-wrapper\">\n              <div>\n                <p className=\"question-no\">{index + 1}.</p>\n              </div>\n\n              <div className=\"question-card\">\n                <p className=\"question-title\">{question.title}</p>\n                <div className=\"question-answers\">\n                  {question.answers.map(option => (\n                    <button\n                      onClick={() => {\n                        this.handleAns(question._id, option);\n                      }}\n                      className=\"question-answers-item\"\n                    >\n                      {option}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"quizlist-heading\">no question found</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Showquiz);\n"]},"metadata":{},"sourceType":"module"}