{"ast":null,"code":"var _jsxFileName = \"/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showquiz.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Showquiz.css\";\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n\n    this.handleQuizzes = () => {\n      this.setState({\n        quizname: this.props.match.params.quizname\n      });\n      fetch(\"http://localhost:3000/api/v1/quizzes\").then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.success) {\n          data.questions.map(question => question.quizset == this.state.quizname ? this.setState({\n            filterqns: this.state.filterqns.concat(question)\n          }) : \"\");\n        }\n      });\n    };\n\n    this.handleAns = (_id, ans) => {\n      this.setState({\n        show: true\n      });\n      let _this$state = this.state,\n          marks = _this$state.marks,\n          filterqns = _this$state.filterqns;\n      filterqns.map(question => {\n        if (question._id == _id) {\n          return question.correctanswer == ans ? this.setState({\n            marks: marks + 1\n          }) : \"\";\n        }\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch(\"http://localhost:3000/api/v1/user/submit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.quizuserToken\n        },\n        body: JSON.stringify({\n          mark: this.state.marks,\n          quizsetName: this.state.quizname\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          this.props.history.push(\"/signup\");\n        }\n      });\n    };\n\n    this.state = {\n      show: false,\n      quizname: \"\",\n      filterqns: [],\n      marks: 0\n    };\n  }\n\n  componentDidMount() {\n    this.handleQuizzes();\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        quizname = _this$state2.quizname,\n        filterqns = _this$state2.filterqns,\n        show = _this$state2.show;\n    return React.createElement(\"div\", {\n      className: \"quizlist-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quizlist-heading-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"quizlist-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, filterqns.length ? quizname : \"\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"quiz name\"), React.createElement(\"p\", {\n      onClick: this.handleSubmit,\n      className: \"\".concat(show ? \"quizlist-submit-btn\" : \"\", \" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, show ? \"SUBMIT\" : \"\")), filterqns.length ? filterqns.map((question, index) => React.createElement(\"div\", {\n      className: \"quiz-card-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"question-no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, index + 1, \".\")), React.createElement(\"div\", {\n      className: \"question-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"question-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, question.title), React.createElement(\"div\", {\n      className: \"question-answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, question.answers.map(option => React.createElement(\"button\", {\n      onClick: () => {\n        this.handleAns(question._id, option);\n      },\n      className: \"question-answers-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, option)))))) : React.createElement(\"p\", {\n      className: \"quizlist-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"no question found\"));\n  }\n\n}\n\nexport default withRouter(Showquiz);","map":{"version":3,"sources":["/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showquiz.js"],"names":["React","withRouter","Showquiz","Component","constructor","handleQuizzes","setState","quizname","props","match","params","fetch","then","res","json","data","console","log","success","questions","map","question","quizset","state","filterqns","concat","handleAns","_id","ans","show","marks","correctanswer","handleSubmit","method","headers","Authorization","localStorage","quizuserToken","body","JSON","stringify","mark","quizsetName","history","push","componentDidMount","render","length","index","title","answers","option"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport \"../styles/Showquiz.css\";\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      quizname: \"\",\n      filterqns: [],\n      marks: 0\n    };\n  }\n  handleQuizzes = () => {\n    this.setState({ quizname: this.props.match.params.quizname });\n    fetch(\"http://localhost:3000/api/v1/quizzes\")\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.success) {\n          data.questions.map(question =>\n            question.quizset == this.state.quizname\n              ? this.setState({\n                  filterqns: this.state.filterqns.concat(question)\n                })\n              : \"\"\n          );\n        }\n      });\n  };\n\n  componentDidMount() {\n    this.handleQuizzes();\n  }\n\n  handleAns = (_id, ans) => {\n    this.setState({ show: true });\n    let { marks, filterqns } = this.state;\n    filterqns.map(question => {\n      if (question._id == _id) {\n        return question.correctanswer == ans\n          ? this.setState({ marks: marks + 1 })\n          : \"\";\n      }\n    });\n  };\n\n  handleSubmit = () => {\n    fetch(\"http://localhost:3000/api/v1/user/submit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.quizuserToken\n      },\n      body: JSON.stringify({\n        mark: this.state.marks,\n        quizsetName: this.state.quizname\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.props.history.push(\"/signup\");\n        }\n      });\n  };\n\n  render() {\n    let { quizname, filterqns, show } = this.state;\n    return (\n      <div className=\"quizlist-section\">\n        <div className=\"quizlist-heading-section\">\n          <p className=\"quizlist-heading\">{filterqns.length ? quizname : \"\"}</p>\n          <h2>quiz name</h2>\n          <p\n            onClick={this.handleSubmit}\n            className={`${show ? \"quizlist-submit-btn\" : \"\"} `}\n          >\n            {show ? \"SUBMIT\" : \"\"}\n          </p>\n        </div>\n        {filterqns.length ? (\n          filterqns.map((question, index) => (\n            <div className=\"quiz-card-wrapper\">\n              <div>\n                <p className=\"question-no\">{index + 1}.</p>\n              </div>\n\n              <div className=\"question-card\">\n                <p className=\"question-title\">{question.title}</p>\n                <div className=\"question-answers\">\n                  {question.answers.map(option => (\n                    <button\n                      onClick={() => {\n                        this.handleAns(question._id, option);\n                      }}\n                      className=\"question-answers-item\"\n                    >\n                      {option}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"quizlist-heading\">no question found</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Showquiz);\n"]},"metadata":{},"sourceType":"module"}