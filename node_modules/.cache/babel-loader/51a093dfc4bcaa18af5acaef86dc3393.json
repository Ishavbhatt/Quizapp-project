{"ast":null,"code":"var _jsxFileName = \"/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showmarks.js\";\nimport React from \"react\";\n\nclass Showmarks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalmarks: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3001/api/v1/user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.quizuserToken\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.setState({\n          totalmarks: data.user.marksId.reverse()\n        });\n      }\n\n      console.log(this.state.totalmarks);\n    });\n  }\n\n  render() {\n    let totalmarks = this.state.totalmarks;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"showmarks-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"showmarks-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Showing all test marks\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"So.No\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Quizset Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Marks secured\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Appeared on\")), totalmarks && totalmarks.map((marks, index) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, marks.quizsetName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, marks.mark), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" \", new Intl.DateTimeFormat(\"en-GB\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      year: \"numeric\"\n    }).format(new Date(marks.createdAt))))))));\n  }\n\n}\n\nexport default Showmarks;","map":{"version":3,"sources":["/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showmarks.js"],"names":["React","Showmarks","Component","constructor","state","totalmarks","componentDidMount","fetch","method","headers","Authorization","localStorage","quizuserToken","then","res","json","data","success","setState","user","marksId","reverse","console","log","render","map","marks","index","quizsetName","mark","Intl","DateTimeFormat","hour","minute","month","day","year","format","Date","createdAt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,MAAAA,MAAM,EAAE,KADiC;AAEzCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAEC,YAAY,CAACC;AAFrB;AAFgC,KAAtC,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,aAAKC,QAAL,CAAc;AAAEb,UAAAA,UAAU,EAAEW,IAAI,CAACG,IAAL,CAAUC,OAAV,CAAkBC,OAAlB;AAAd,SAAd;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,UAAvB;AACD,KAbH;AAcD;;AACDmB,EAAAA,MAAM,GAAG;AAAA,QACDnB,UADC,GACc,KAAKD,KADnB,CACDC,UADC;AAEP,WACE,0CACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF,EAQGA,UAAU,IACTA,UAAU,CAACoB,GAAX,CAAe,CAACC,KAAD,EAAQC,KAAR,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,GAAG,CAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,WAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAK,CAACG,IAAX,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCC,MAAAA,IAAI,EAAE,SAD0B;AAEhCC,MAAAA,MAAM,EAAE,SAFwB;AAGhCC,MAAAA,KAAK,EAAE,SAHyB;AAIhCC,MAAAA,GAAG,EAAE,SAJ2B;AAKhCC,MAAAA,IAAI,EAAE;AAL0B,KAAjC,EAMEC,MANF,CAMS,IAAIC,IAAJ,CAASZ,KAAK,CAACa,SAAf,CANT,CAFH,CALF,CADF,CATJ,CAFF,CADF,CADF;AAmCD;;AA5DqC;;AA8DxC,eAAetC,SAAf","sourcesContent":["import React from \"react\";\n\nclass Showmarks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalmarks: \"\"\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:3001/api/v1/user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.quizuserToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({ totalmarks: data.user.marksId.reverse() });\n        }\n        console.log(this.state.totalmarks);\n      });\n  }\n  render() {\n    let { totalmarks } = this.state;\n    return (\n      <>\n        <div className=\"showmarks-section\">\n          <p className=\"showmarks-heading\">Showing all test marks</p>\n          <table>\n            <tr>\n              <th>So.No</th>\n              <th>Quizset Name</th>\n              <th>Marks secured</th>\n              <th>Appeared on</th>\n            </tr>\n\n            {totalmarks &&\n              totalmarks.map((marks, index) => (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{marks.quizsetName}</td>\n                  <td>{marks.mark}</td>\n\n                  <td>\n                    {\" \"}\n                    {new Intl.DateTimeFormat(\"en-GB\", {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                      month: \"2-digit\",\n                      day: \"2-digit\",\n                      year: \"numeric\"\n                    }).format(new Date(marks.createdAt))}\n                  </td>\n                </tr>\n              ))}\n          </table>\n        </div>\n      </>\n    );\n  }\n}\nexport default Showmarks;\n"]},"metadata":{},"sourceType":"module"}