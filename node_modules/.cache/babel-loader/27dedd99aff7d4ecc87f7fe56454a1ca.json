{"ast":null,"code":"var _jsxFileName = \"/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showquiz.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/Showquiz.css\";\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n\n    this.handleQuizzes = () => {\n      this.setState({\n        quizname: this.props.match.params.quizname\n      });\n      fetch(\"http://localhost:3000/api/v1/quizzes\").then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.success) {\n          data.questions.map(question => question.quizset === this.state.quizname ? this.setState({\n            filterqns: this.state.filterqns.concat(question)\n          }) : \"\");\n        }\n      });\n    };\n\n    this.handleAns = (event, _id, ans) => {\n      console.log(event, _id, ans);\n      this.setState({\n        ans: true\n      });\n      event.target.parentElement.parentElement.innerText = event.target.innerText; // event.target.parentElement.style.visibility = \"hidden\";\n\n      this.setState({\n        show: true\n      });\n      let _this$state = this.state,\n          marks = _this$state.marks,\n          filterqns = _this$state.filterqns;\n      filterqns.map(question => {\n        if (question._id === _id) {\n          return question.correctanswer === ans ? this.setState({\n            marks: marks + 1\n          }) : \"\";\n        }\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch(\"http://localhost:3000/api/v1/user/submit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.quizuserToken\n        },\n        body: JSON.stringify({\n          mark: this.state.marks,\n          quizsetName: this.state.quizname\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.success) {\n          this.props.history.push(\"/signup\");\n        }\n      });\n    };\n\n    this.state = {\n      show: false,\n      quizname: \"\",\n      filterqns: [],\n      marks: 0,\n      ans: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleQuizzes();\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        ans = _this$state2.ans,\n        quizname = _this$state2.quizname,\n        filterqns = _this$state2.filterqns,\n        show = _this$state2.show;\n    console.log(show);\n    return React.createElement(\"div\", {\n      className: \"quizlist-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quizlist-heading-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"quizlist-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, filterqns.length ? quizname : \"\")), filterqns.length ? filterqns.map((question, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quiz-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"question-no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, index + 1, \".\")), React.createElement(\"div\", {\n      className: \"questions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"question-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, question.title), React.createElement(\"div\", {\n      className: \"question-answers \".concat(ans ? \"correct-answer\" : \"wrong-answer\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, question.answers.map(option => React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: event => {\n        this.handleAns(event, question._id, option);\n      },\n      className: \"question-answers-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, option)))))) : React.createElement(\"p\", {\n      className: \"quizlist-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"no question found\"), React.createElement(\"h3\", {\n      onClick: this.handleSubmit,\n      className: \"\".concat(show ? \"quizlist-submit-btn\" : \"\", \" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, show ? \"SUBMIT\" : \"\"));\n  }\n\n}\n\nexport default withRouter(Showquiz);","map":{"version":3,"sources":["/home/ishav/Documents/Altcampus/projects/Quizapp-project/src/components/Showquiz.js"],"names":["React","withRouter","Showquiz","Component","constructor","handleQuizzes","setState","quizname","props","match","params","fetch","then","res","json","data","console","log","success","questions","map","question","quizset","state","filterqns","concat","handleAns","event","_id","ans","target","parentElement","innerText","show","marks","correctanswer","handleSubmit","method","headers","Authorization","localStorage","quizuserToken","body","JSON","stringify","mark","quizsetName","history","push","componentDidMount","render","length","index","title","answers","option"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport \"../styles/Showquiz.css\";\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      quizname: \"\",\n      filterqns: [],\n      marks: 0,\n      ans: false\n    };\n  }\n  handleQuizzes = () => {\n    this.setState({ quizname: this.props.match.params.quizname });\n    fetch(\"http://localhost:3000/api/v1/quizzes\")\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.success) {\n          data.questions.map(question =>\n            question.quizset === this.state.quizname\n              ? this.setState({\n                  filterqns: this.state.filterqns.concat(question)\n                })\n              : \"\"\n          );\n        }\n      });\n  };\n\n  componentDidMount() {\n    this.handleQuizzes();\n  }\n\n  handleAns = (event, _id, ans) => {\n    console.log(event, _id, ans);\n    this.setState({ ans: true });\n    event.target.parentElement.parentElement.innerText = event.target.innerText;\n    // event.target.parentElement.style.visibility = \"hidden\";\n    this.setState({ show: true });\n    let { marks, filterqns } = this.state;\n    filterqns.map(question => {\n      if (question._id === _id) {\n        return question.correctanswer === ans\n          ? this.setState({ marks: marks + 1 })\n          : \"\";\n      }\n    });\n  };\n\n  handleSubmit = () => {\n    fetch(\"http://localhost:3000/api/v1/user/submit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.quizuserToken\n      },\n      body: JSON.stringify({\n        mark: this.state.marks,\n        quizsetName: this.state.quizname\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.success) {\n          this.props.history.push(\"/signup\");\n        }\n      });\n  };\n\n  render() {\n    let { ans, quizname, filterqns, show } = this.state;\n    console.log(show);\n    return (\n      <div className=\"quizlist-section\">\n        <div className=\"quizlist-heading-section\">\n          <p className=\"quizlist-heading\">{filterqns.length ? quizname : \"\"}</p>\n        </div>\n        {filterqns.length ? (\n          filterqns.map((question, index) => (\n            <div>\n              <div className=\"quiz-wrapper\">\n                <div>\n                  <p className=\"question-no\">{index + 1}.</p>\n                </div>\n\n                <div className=\"questions\">\n                  <p className=\"question-title\">{question.title}</p>\n                  <div\n                    className={`question-answers ${\n                      ans ? \"correct-answer\" : \"wrong-answer\"\n                    }`}\n                  ></div>\n                </div>\n              </div>\n              <div>\n                {question.answers.map(option => (\n                  <div className=\"answers\">\n                    <button\n                      onClick={event => {\n                        this.handleAns(event, question._id, option);\n                      }}\n                      className=\"question-answers-item\"\n                    >\n                      {option}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"quizlist-heading\">no question found</p>\n        )}\n        <h3\n          onClick={this.handleSubmit}\n          className={`${show ? \"quizlist-submit-btn\" : \"\"} `}\n        >\n          {show ? \"SUBMIT\" : \"\"}\n        </h3>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Showquiz);\n"]},"metadata":{},"sourceType":"module"}